[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | .*migrations.*
    | versioneer.py
  )
)
'''

[tool.coverage.run]
include = [
  'boundlexx/*',
]
omit = [
  '*migrations*',
  '*tests*',
]
plugins = [
  'django_coverage_plugin',
]


[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
skip_glob = [
  ".tox",
  ".git",
  "*/migrations/*",
  "*/static/CACHE/*",
  "docs",
  "node_modules",
  "manage.py",
  "boundlexx/utils/backends.py",
]

[tool.pylint.master]
load-plugins = [
  'pylint_django',
  'pylint_celery'
]

[tool.pylint.format]
max-line = 88

[tool.pylint.messages_control]
disable = [
  'too-few-public-methods',
  'no-self-use',
  'missing-docstring',
  'invalid-name',
  'bad-continuation',
  'line-too-long',
  'unused-argument',
  'useless-super-delegation',
  'duplicate-code',
  'import-outside-toplevel',
  'ungrouped-imports',
  'too-many-ancestors',
]

[tool.pylint.design]
max-parents = 13

[tool.pylint.typecheck]
generated-members = [
  'REQUEST',
  'acl_users',
  'aq_parent',
  '[a-zA-Z]+_set{1,2}',
  'save',
  'delete',
]

[tool.pylint.django_foreign_keys_referenced_by_strings]
django-settings-module = 'config.settings.test'

[tool.pytest.ini_options]
addopts = "--ds=config.settings.test --reuse-db --create-db --cov-report xml --cov-report term:skip-covered --cov=boundlexx"
python_files = "tests.py test_*.py"
env_override_existing_values = 1
env_files= '.test.env'

# Ruff configuration (modernization step replacing Black/isort/Flake8/Pylint gradually)
[tool.ruff]
line-length = 88
target-version = "py39"
extend-exclude = [
  "*/migrations/*",
  "docs",
  "node_modules",
]

# Enable rule sets: (E,F) pycodestyle/pyflakes, I import sorting, B bugbear, N pep8-naming, UP pyupgrade, DJ Django
lint.select = ["E", "F", "I", "B", "N", "UP", "DJ"]
lint.ignore = [
  # Existing stylistic allowances carried over from prior config
  "E501",  # line length handled separately / already enforced logically
  "B008",  # function call in default argument (common in Django patterns)
]
lint.per-file-ignores = { "tests/*" = ["S101"], "*/migrations/*" = ["ALL"] }

[tool.ruff.lint.isort]
known-first-party = ["boundlexx"]
combine-as-imports = true
force-single-line = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# mypy configuration (initial pass). Will be tightened over time.
[tool.mypy]
python_version = "3.9"
plugins = ["mypy_django_plugin.main"]
exclude = [
  ".*migrations.*",
  "tests/",
]
ignore_missing_imports = true
follow_imports = "silent"
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
pretty = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.mypy.plugins.django-stubs]
django_settings_module = "config.settings.test"
