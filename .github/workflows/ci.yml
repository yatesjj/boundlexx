name: Boundlexx CI/CD

on:
  push:
    # Run on all branches for testing, but only publish from master
    branches:
      - "**"
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  DOCKER_BUILDKIT: 1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  # Run tests and linting
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fix permissions
        run: sudo chown -R 1000:1000 $GITHUB_WORKSPACE

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Pull cached images
        run: |
          docker pull ${{ env.REGISTRY }}/angellusmortis/boundlexx-postgres:latest || true
          docker pull ${{ env.REGISTRY }}/angellusmortis/boundlexx-django:latest || true
          docker pull ${{ env.REGISTRY }}/angellusmortis/boundlexx-django-dev:latest || true

      - name: Build CI images
        run: docker compose build postgres test lint

      - name: Cache dev Django image
        run: |
          docker tag boundlexx-django-dev ${{ env.REGISTRY }}/angellusmortis/boundlexx-django-dev:latest
          docker push ${{ env.REGISTRY }}/angellusmortis/boundlexx-django-dev:latest || true

      - name: Run linters
        run: docker compose run --rm lint

      - name: Run tests
        run: docker compose run --rm test

  # Build and push production images
  build-and-push:
    name: Build and Push Production Images
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry (works for all repositories)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push django production image
      - name: Build and push django image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/django/Dockerfile
          target: production
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/boundlexx-django:latest

      # Build and push postgres image
      - name: Build and push postgres image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/postgres/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/boundlexx-postgres:latest
